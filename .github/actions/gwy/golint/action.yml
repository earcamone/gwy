name: 'Code Linting Scan'
description: 'Checks Go code with golangci-lint and optionally creates a PR with fixes'

inputs:
  token:
    description: 'Repository token for PR creation (required if create-pr is true)'
    required: false

outputs:
  result:
    description: 'Result of the linting check (success or failed)'
    value: ${{ steps.check-linting.outputs.result }}

runs:
  using: 'composite'
  steps:
    - name: Initialize Lint Check Environment
      shell: bash
      run: |
        GWY_SUMMARY=$RUNNER_TEMP/summary.txt
        echo -e "## Code Linting Scan" >> $GWY_SUMMARY
        
        # set annotations reusable title
        echo "GWY_TITLE=code linting check" >> $GITHUB_ENV
        
        echo "GWY_LINT_ISSUES=0" >> $GITHUB_ENV
        echo "GWY_SUMMARY=$GWY_SUMMARY" >> $GITHUB_ENV
        echo "GWY_BRANCH=$(git branch --show-current)" >> $GITHUB_ENV
        echo "GWY_ARTIFACT=$RUNNER_TEMP/lint-report.txt" >> $GITHUB_ENV

    - name: Install golangci-lint
      shell: bash
      run: |
        # Install golangci-lint
        
        # Go is already set up, just install golangci-lint
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.61.0
        export PATH="$(go env GOPATH)/bin:$PATH"
        
        # Verify installation
        golangci-lint --version

    - name: Check Linting Issues
      shell: bash --noprofile --norc +e -o pipefail {0}
      continue-on-error: true
      run: | 
        # check code linting issues 
        golangci-lint run --out-format=line-number --timeout=${{ env.GWY_TIMEOUT_SECONDS }}s --issues-exit-code=0 > ${{ env.GWY_ARTIFACT }} 2>&1
        
        # parse linting issues count
        GWY_LINT_ISSUES=$(grep -E '[^/]+\.go:[0-9]+:' ${{ env.GWY_ARTIFACT }} | wc -l)
        echo "GWY_LINT_ISSUES=$GWY_LINT_ISSUES" >> $GITHUB_ENV

        if [ $GWY_LINT_ISSUES -ne 0 ]; then
          # set step result
          echo "result=failed" >> $GITHUB_OUTPUT

          # add linting issues count annotation
          echo "::error title=$GWY_TITLE: $GWY_LINT_ISSUES ISSUES FOUND!::check summary or artifact report for more details"

          # append summary output
          grep -E '[^/]+\.go:[0-9]+:' ${{ env.GWY_ARTIFACT }} | sed 's|.*/\(.*\.go:[0-9]\+:[0-9]*\):\(.*\)|\1 - \2|' >> $GWY_SUMMARY
          echo -e " \n  - $GWY_LINT_ISSUES linting issues detected (see artifact 'lint-report' for full details):" >> $GWY_SUMMARY

        else
          # set step result
          echo "result=success" >> $GITHUB_OUTPUT

          # generate successful summary and annotation
          echo "::notice title=$GWY_TITLE::no linting issues found in codebase"
          echo "  - No linting issues detected :)" >> $GWY_SUMMARY
        fi

        cat $GWY_SUMMARY >> $GITHUB_STEP_SUMMARY
        sync

    - name: Upload Lint Report Artifact
      if: always()
      uses: actions/upload-artifact@v4
      continue-on-error: true
      with:
        name: lint-report
        path: ${{ env.GWY_ARTIFACT }}

    - name: Step Clean-Up
      if: always()
      shell: bash
      run: |
        rm $GWY_ARTIFACT
        rm $GWY_SUMMARY
        
        unset GWY_TITLE
        unset GWY_BRANCH
        unset GWY_SUMMARY
        unset GWY_ARTIFACT
        unset GWY_LINT_ISSUES